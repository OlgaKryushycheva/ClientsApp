@model ClientsApp.Models.Entities.ExecutorTask
@{
    ViewData["Title"] = "Додати запис";
    var executors = ViewBag.Executors as IEnumerable<ClientsApp.Models.Entities.Executor>;
}

<h2>Додати запис</h2>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="ExecutorId"></label>
        <select asp-for="ExecutorId" class="form-control" id="ExecutorId">
            <option value="">-- Виберіть виконавця --</option>
            @foreach (var ex in executors)
            {
                <option value="@ex.ExecutorId" data-rate="@ex.HourlyRate">
                    @ex.FullName
                </option>
            }
        </select>
        <span asp-validation-for="ExecutorId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ClientId"></label>
        <select asp-for="ClientId" class="form-control" asp-items="ViewBag.Clients" id="ClientId">
            <option value="">-- Виберіть клієнта --</option>
        </select>
        <span asp-validation-for="ClientId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ClientTaskId"></label>
        <select asp-for="ClientTaskId" class="form-control" asp-items="ViewBag.Tasks" id="ClientTaskId">
            <option value="">-- Виберіть завдання --</option>
        </select>
        <span asp-validation-for="ClientTaskId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ActualTime"></label>
        <input asp-for="ActualTime" class="form-control" />
        <span asp-validation-for="ActualTime" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="AdjustedTime"></label>
        <input asp-for="AdjustedTime" class="form-control" id="AdjustedTime" />
        <span asp-validation-for="AdjustedTime" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Вартість</label>
        <input id="TaskCost" class="form-control" readonly />
    </div>
    <button type="submit" class="btn btn-success">Зберегти</button>
    <a asp-action="Index" class="btn btn-secondary">Скасувати</a>
</form>

@section Scripts{
<script>
    document.addEventListener('DOMContentLoaded', function(){
        const executorSelect = document.getElementById('ExecutorId');
        const clientSelect = document.getElementById('ClientId');
        const taskSelect = document.getElementById('ClientTaskId');
        const adjustedInput = document.getElementById('AdjustedTime');
        const costInput = document.getElementById('TaskCost');

        executorSelect.addEventListener('change', function(){
            taskSelect.innerHTML = '<option value="">-- Виберіть завдання --</option>';
            loadTasks();
            updateCost();
        });

        clientSelect.addEventListener('change', function(){
            loadTasks();
        });

        async function loadTasks(){
            const executorId = executorSelect.value;
            const clientId = clientSelect.value;
            taskSelect.innerHTML = '<option value="">-- Виберіть завдання --</option>';
            if(executorId && clientId){
                const resp = await fetch(`/ExecutorTask/GetTasksByExecutorClient?executorId=${executorId}&clientId=${clientId}`);
                const data = await resp.json();
                data.forEach(t => {
                    const opt = document.createElement('option');
                    opt.value = t.clientTaskId;
                    opt.textContent = t.taskTitle;
                    taskSelect.appendChild(opt);
                });
            }
        }

        function updateCost(){
            const rate = parseFloat(executorSelect.selectedOptions[0]?.getAttribute('data-rate')) || 0;
            const time = parseFloat(adjustedInput.value) || 0;
            costInput.value = (rate * time).toFixed(2);
        }

        adjustedInput.addEventListener('input', updateCost);
        executorSelect.addEventListener('change', updateCost);
        updateCost();
    });
</script>
}
